/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { VaultContract, VaultContractInterface } from '../VaultContract';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'khooleeToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'mockOT',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'DEBT_CEILING',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FLAT_FEE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'INTEREST_PER_MONTH',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'INTEREST_PER_MONTH_PRECISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LIQUIDATION_THRESHOLD',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LIQUIDATION_THRESHOLD_PRECISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOAN_TO_VALUE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'LOAN_TO_VALUE_PRECISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'collateralAmount',
        type: 'uint256',
      },
    ],
    name: 'addCollateral',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'borrowAmount',
        type: 'uint256',
      },
    ],
    name: 'borrowKhooleeCoins',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDebtCeiling',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTotalCollateral',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'getUserBorrowed',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'getUserCollateral',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'collateralAmount',
        type: 'uint256',
      },
    ],
    name: 'removeCollateral',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'repayDebt',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'returnHealthFactor',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalBorrow',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalCollateral',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'userBorrowed',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'userCollateral',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50604051610d2f380380610d2f83398101604081905261002f9161007c565b600480546001600160a01b039384166001600160a01b031991821617909155600580549290931691161790556100ae565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008e578182fd5b61009783610060565b91506100a560208401610060565b90509250929050565b610c72806100bd6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806390a8ae9b116100b8578063c42c6e3b1161007c578063c42c6e3b1461015a578063c55e6adf14610192578063d6eb5910146101fb578063dda1b91214610203578063e86ef40b1461020b578063f69f1e4a1461021e57610137565b806390a8ae9b146101b257806394cd4ba7146101ba5780639a7d7813146101c2578063b6f7132f146101d5578063bcc46e83146101e857610137565b8063424f0474116100ff578063424f0474146101925780634ac8eb5f1461019a578063788c047a146101a25780638285ef40146101aa578063831a63501461015a57610137565b8063082151e71461013c5780630f7d6bed1461015a5780631b99d9d6146101625780633237c1581461016c578063325640421461017f575b600080fd5b610144610231565b6040516101519190610a9b565b60405180910390f35b6101446102c1565b61016a6102c6565b005b61016a61017a366004610983565b610421565b61016a61018d366004610983565b610506565b610144610676565b61014461067b565b610144610681565b610144610686565b61014461068c565b610144610691565b6101446101d036600461093c565b610696565b6101446101e336600461093c565b6106a8565b61016a6101f6366004610983565b6106c3565b610144610847565b61014461084d565b61014461021936600461093c565b610852565b61014461022c36600461093c565b61086d565b3360009081526003602052604081205461024d575060646102be565b6000600a6102b0610262604b6064600261087f565b61026a6108d3565b336000908152600260205260409020546102849190610bf0565b61028e9190610bf0565b336000908152600360205260409020546102a9906064610bf0565b600261087f565b6102ba9190610abc565b9150505b90565b606481565b3360008181526003602052604090819020546004805492516370a0823160e01b815291936001600160a01b03909316926370a082319261030692016109b3565b60206040518083038186803b15801561031e57600080fd5b505afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610356919061099b565b101561037d5760405162461bcd60e51b815260040161037490610a04565b60405180910390fd5b336000908152600360205260408120805491905560015461039e90826108e8565b6001556004805460405163079cc67960e41b81526001600160a01b03909116916379cc6790916103d29133918691016109eb565b600060405180830381600087803b1580156103ec57600080fd5b505af1158015610400573d6000803e3d6000fd5b50503360009081526002602052604090205461041e92509050610421565b50565b3360009081526002602052604090205481111561043d57600080fd5b3360009081526002602052604090205461045790826108e8565b336000908152600260205260408120919091555461047590826108e8565b60005560055460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906104aa90339085906004016109eb565b602060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190610963565b5061041e336108f4565b6000600a606460326105166108d3565b336000908152600260205260409020546105309190610bf0565b61053a9190610bf0565b6105449190610abc565b61054e9190610abc565b33600090815260036020526040902054909150819061056d9084610aa4565b111561058b5760405162461bcd60e51b815260040161037490610a31565b33600090815260036020526040902054600154601491906105ad908590610aa4565b6105b79190610aa4565b11156105d55760405162461bcd60e51b815260040161037490610a66565b336000908152600360205260409020546105ef9083610916565b3360009081526003602052604090205560015461060c9083610916565b600155600480546040516340c10f1960e01b81526001600160a01b03909116916340c10f19916106409133918791016109eb565b600060405180830381600087803b15801561065a57600080fd5b505af115801561066e573d6000803e3d6000fd5b505050505050565b601481565b60005481565b603281565b60015481565b604b81565b601490565b60036020526000908152604090205481565b6001600160a01b031660009081526002602052604090205490565b60006106cd6108d3565b6106d96014600a610bf0565b6106e39190610abc565b90506106ef8183610aa4565b6005546040516370a0823160e01b81526001600160a01b03909116906370a082319061071f9033906004016109b3565b60206040518083038186803b15801561073757600080fd5b505afa15801561074b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076f919061099b565b101561077a57600080fd5b336000908152600260205260409020546107949083610916565b33600090815260026020526040812091909155546107b29083610916565b6000556005546001600160a01b03166323b872dd33306107d28587610aa4565b6040518463ffffffff1660e01b81526004016107f0939291906109c7565b602060405180830381600087803b15801561080a57600080fd5b505af115801561081e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108429190610963565b505050565b60005490565b600481565b6001600160a01b031660009081526003602052604090205490565b60026020526000908152604090205481565b60008061088d836001610aa4565b61089890600a610b22565b6108a29086610bf0565b90506000600a6108b28684610abc565b6108bd906005610aa4565b6108c79190610abc565b925050505b9392505050565b60006108e36008600a600161087f565b905090565b60006108cc8284610c0f565b60006064610900610231565b10905080156109125761091282610922565b5050565b60006108cc8284610aa4565b6001600160a01b0316600090815260026020526040812055565b60006020828403121561094d578081fd5b81356001600160a01b03811681146108cc578182fd5b600060208284031215610974578081fd5b815180151581146108cc578182fd5b600060208284031215610994578081fd5b5035919050565b6000602082840312156109ac578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b602080825260139082015272496e73756666696369656e7420546f6b656e7360681b604082015260600190565b6020808252818101527f426f72726f7720416d6f756e742061626f76652044656274204365696c696e67604082015260600190565b6020808252818101527f426f72726f7720416d6f756e742041626f76652044656274204365696c696e67604082015260600190565b90815260200190565b60008219821115610ab757610ab7610c26565b500190565b600082610ad757634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611610aee5750610b19565b818704821115610b0057610b00610c26565b80861615610b0d57918102915b9490941c938002610adf565b94509492505050565b60006108cc6000198484600082610b3b575060016108cc565b81610b48575060006108cc565b8160018114610b5e5760028114610b6857610b95565b60019150506108cc565b60ff841115610b7957610b79610c26565b6001841b915084821115610b8f57610b8f610c26565b506108cc565b5060208310610133831016604e8410600b8410161715610bc8575081810a83811115610bc357610bc3610c26565b6108cc565b610bd58484846001610adc565b808604821115610be757610be7610c26565b02949350505050565b6000816000190483118215151615610c0a57610c0a610c26565b500290565b600082821015610c2157610c21610c26565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e83656a815da6ad27a912b7a0da2e8997d0f764a10f64967b566c78becf0152564736f6c63430008000033';

type VaultContractConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VaultContractConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultContract__factory extends ContractFactory {
  constructor(...args: VaultContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(khooleeToken: string, mockOT: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<VaultContract> {
    return super.deploy(khooleeToken, mockOT, overrides || {}) as Promise<VaultContract>;
  }
  getDeployTransaction(khooleeToken: string, mockOT: string, overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(khooleeToken, mockOT, overrides || {});
  }
  attach(address: string): VaultContract {
    return super.attach(address) as VaultContract;
  }
  connect(signer: Signer): VaultContract__factory {
    return super.connect(signer) as VaultContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultContractInterface {
    return new utils.Interface(_abi) as VaultContractInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VaultContract {
    return new Contract(address, _abi, signerOrProvider) as VaultContract;
  }
}
